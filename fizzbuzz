#/usr/bin/env bash

readonly version="v0.1"

T_getVersion() {
    local result="$(main -v)"
    [[ "$result" == "$version" ]]
}

T_notVersion() {
    local result="$(main 1)"
    [[ "$result" == "1" ]]
}

T_notValidParam() {	
	local result="$(main -3)"
	[[ "$result" == "Not a positive number" ]]
	local result="$(main foo)"
	[[ "$result" == "Not a positive number" ]]
}

T_validParam() {	
	local result="$(main 1)"
	[[ "$result" == "1" ]]
}

T_validNumber() {
	local result="$(isPosNumber 2)"
	[[ "$result" == true ]]
}

T_invalidNumber() {
	local result="$(isPosNumber foo)"
	[[ "$result" == false ]]
	local result="$(isPosNumber -3)"
	[[ "$result" == false ]]
}

T_doNotFizzbuzz() {
	local result="$(fizzbuzz 1)"
	[[ "$result" == "1" ]]
}

T_doFizzBuzz() {
	local result="$(fizzbuzz 15)"
	[[ "$result" == "FizzBuzz" ]]
	local result="$(fizzbuzz 30)"
	[[ "$result" == "FizzBuzz" ]]
	local result="$(fizzbuzz 90)"
	[[ "$result" == "FizzBuzz" ]]
}

T_doFizz() {
	local result="$(fizzbuzz 3)"
	[[ "$result" == "Fizz" ]]
	local result="$(fizzbuzz 9)"
	[[ "$result" == "Fizz" ]]
	local result="$(fizzbuzz 99)"
	[[ "$result" == "Fizz" ]]
}

T_doBuzz() {
	local result="$(fizzbuzz 5)"
	[[ "$result" == "Buzz" ]]
	local result="$(fizzbuzz 50)"
	[[ "$result" == "Buzz" ]]
	local result="$(fizzbuzz 55)"
	[[ "$result" == "Buzz" ]]
}

T_doLoop() {
	local result="$(loop 1)"
	[[ "$result" == "1" ]]
	local result="$(loop 3)"
	[[ "$result" == "1
2
Fizz" ]]
	local result="$(loop 5)"
	[[ "$result" == "1
2
Fizz
4
Buzz" ]]
}

isPosNumber() {
	declare desc="is parameter a positive integer?"
	[[ "$1" =~ ^[0-9]+$ ]] && echo true || echo false
}

fizzbuzz() {
	declare desc="if fiven parameter divides by 3, echo Fizz, by 5, echo Buzz, by 3 + 5, echo FizzBuzz"
	local given="$1"
	if [[ "$(expr $given % 15)" -eq 0 ]]; then
		echo "FizzBuzz"
	elif [[ "$(expr $given % 3)" -eq 0 ]]; then
		echo "Fizz"
	elif [[ "$(expr $given % 5)" -eq 0 ]]; then
		echo "Buzz"
	else
		echo "$given"
	fi
}

loop() {
	declare desc="run fizzbuzz for positive integers 1 to given parameter"
	local given="${1:-10}"
	if [[ "$(isPosNumber $given)" == false ]]; then
		echo "Not a positive number"
		exit 1
	fi
	for n in $(seq "$given"); do
		fizzbuzz "$n"
	done
}

main() {
    set -eo pipefail; [[ "$TRACE" ]] && set -x
    case "$1" in
        "-v")         echo "$version";;
        *)            loop "$@";;
    esac
}

[[ "$0" == "$BASH_SOURCE" ]] && main "$@"